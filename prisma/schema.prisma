// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//------------------------------------------------

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  formats   Format[]
  content   String?
  score     Decimal? @db.Decimal(3, 2)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model User {
  id       String @id @default(uuid()) @db.Uuid
  name     String @unique
  posts    Post[]
  email    String @unique @db.VarChar(255)
  password String
}

model Book {
  id     Int      @id @default(autoincrement())
  title  String   @db.VarChar(255)
  author String   @db.VarChar(255) // Can make another model for series
  series String?  @db.VarChar(255) // Can make another modle for authors
  entry  Decimal? @db.Decimal(4, 2)
  cover  String   @db.VarChar(255)
  genres Genre[]
  Posts  Post[]
}

model Genre {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(255)
  books Book[]
}

model Format {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(255)
  posts Post[]
}

model Origin {
  id  Int    @id @default(autoincrement())
  url String @unique @db.VarChar(255)
}
